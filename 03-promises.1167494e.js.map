{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAmCpCF,EAAKG,iBAAiB,UAjCtB,SAA+BC,GAC7BA,EAAEC,iBAEF,MAAMC,EAAQC,SAASP,EAAKE,cAAc,kBAAkBM,OACtDC,EAAOF,SAASP,EAAKE,cAAc,iBAAiBM,OACpDE,EAASH,SAASP,EAAKE,cAAc,mBAAmBM,OAE9D,SAASG,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAIb,IAAK,IAAIO,EAAI,EAAGA,GAAKV,EAAQU,GAAI,EAAG,CAGlCT,EAAcS,EAFQd,GAASc,EAAI,GAAKX,GAGvCY,MAAK,EAACT,SAAEA,EAAQC,MAAEA,MACjBf,EAAAwB,OAAOC,QAAQ,uBAAqBX,QAAiBC,MAAU,IAEhEW,OAAM,EAACZ,SAAEA,EAAQC,MAAEA,MAClBf,EAAAwB,OAAOG,QAAQ,sBAAoBb,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector(\".form\");\n\nfunction onStartCreatePromises(e) {\n  e.preventDefault();\n  \n  const delay = parseInt(form.querySelector(\"[name='delay']\").value);\n  const step = parseInt(form.querySelector(\"[name='step']\").value);\n  const amount = parseInt(form.querySelector(\"[name='amount']\").value);\n  \n  function createPromise(position, delay) {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        const shouldResolve = Math.random() > 0.3;\n        if (shouldResolve) {\n          resolve({ position, delay });\n        } else {\n          reject({ position, delay });\n        };\n      }, delay);\n    });\n  };\n  \n  for (let i = 1; i <= amount; i+= 1) {\n    const timeNextDelay = delay + (i - 1) * step;\n    \n    createPromise(i, timeNextDelay)\n    .then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n  };\n};\n\nform.addEventListener(\"submit\", onStartCreatePromises);"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","addEventListener","e","preventDefault","delay1","parseInt","value","step","amount","createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","i","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.1167494e.js.map"}